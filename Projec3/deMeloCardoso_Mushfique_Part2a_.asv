clear;
clc;
close all;

[test_signalOriginal, FsO]=audioread('OriginalTestSignal48.wav');
[test_signal, Fs]=audioread('testSignal48.wav');

if(0)
    for order=10:10:100
        [d1,p1] = aryule(test_signal,order);
        figure;
        freqz(sqrt(p1),d1);
        title("Frequency response aryule method - denominator order = " + num2str(order));
%         figure;
%         zplane(sqrt(p1),d1);
%         title("Z plane for order = 80");    
%         figure(); impz(sqrt(p1),d1);
%         title("h(n) aryule method - denominator order = 80");
    end
end

if(0)
    
    for na=5:1:10
        %nb zeros, and exactly na poles.
        [b,a] = stmcb(test_signal,test_signalOriginal,0,na);
        figure;
        [H1,w1] = freqz(b,a);
        freqz(b,a);
        title("Frequency response STMCB method - denominator order = " + num2str(na));
    end

end

if(1)
    order = 100;
    [d1,p1] = aryule(test_signal,order);
    figure;
    freqz(sqrt(p1),d1);
    title("Frequency response aryule method - denominator order = " + num2str(order));
%     figure;
%     zplane(sqrt(p1),d1);
%     title("Z plane for order = 50");    
%     figure(); impz(sqrt(p1),d1);
%     title("h(n) aryule method - denominator order = 50");

end

[originalMusic, FsOriginalMusic]=audioread('music4816.wav');

filteredOriginalMusic = filter(sqrt(p1),d1,originalMusic);

% sound(filteredOriginalMusic,FsOriginalMusic);
% audiowrite('filteredOriginalMusic48.wav', filteredOriginalMusic,48e3);

[MusicWith, FsMusicWith]=audioread('music4816Without.wav');

%% Cross correlation
[xc,lags] = xcorr(test_signal,test_signalOriginal);
[~,I] = max(abs(xc));
figure
stem(lags,xc,'filled')
legend(sprintf('Maximum at lag %d',lags(I)))
title('Sample Cross-Correlation Sequence');

return;
%%
outputNoiseCancel = filteredOriginalMusic-MusicWith;

sound(outputNoiseCancel,48e3);

return;

clear sound;

